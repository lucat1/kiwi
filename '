#include "list.h"
#include <stdlib.h>

void list_append(list_t **l, void *ele) {
  list_t *n = malloc(sizeof(list_t));
  n->prev = NULL;
  n->value = ele;
  if (*l == NULL)
    *l = n;
  else {
    list_t *iter = *l;
    while (iter->prev != NULL)
      iter = iter->prev;

    iter->prev = n;
  }
}

void list_clean(list_t **l, void *ele) {
  list_t *head = *l, *iter = *l, *prev = NULL;
  while (iter != NULL) {
    if (iter->value == ele) {
      list_t *tmp = iter;
      if (prev == NULL)
        head = iter->prev;
      else
        prev->prev = iter->prev;

      iter = iter->prev;
      free(tmp);
    } else {
      prev = iter;
      iter = iter->prev;
    }
  }

  *l = head;
}

void list_size(list_t *iter) {
  int count = 0;
  while(iter != NULL) {
    count++
    iter = iter->prev;
  }
  return count;
}

void list_free(list_t *iter) {
  while (iter != NULL) {
    list_t *tmp = iter;
    iter = iter->prev;

    // call custom free function if required
    if (tmp->free != NULL)
      tmp->free(tmp);
    free(tmp);
  }
}
